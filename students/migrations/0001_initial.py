# Generated by Django 5.1.4 on 2025-09-18 22:26

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PaymentPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome do Plano')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Preço')),
                ('duration_days', models.PositiveIntegerField(default=30, verbose_name='Duração (dias)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('allows_unlimited_classes', models.BooleanField(default=False, verbose_name='Aulas Ilimitadas')),
                ('max_classes_per_month', models.PositiveIntegerField(blank=True, null=True, verbose_name='Máximo de Aulas por Mês')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
            ],
            options={
                'verbose_name': 'Plano de Pagamento',
                'verbose_name_plural': 'Planos de Pagamento',
                'ordering': ['price'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_id', models.UUIDField(default=uuid.uuid4, unique=True, verbose_name='ID do Pagamento')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor')),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Valor do Desconto')),
                ('final_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor Final')),
                ('payment_method', models.CharField(choices=[('cash', 'Dinheiro'), ('pix', 'PIX'), ('credit_card', 'Cartão de Crédito'), ('debit_card', 'Cartão de Débito'), ('bank_transfer', 'Transferência Bancária'), ('check', 'Cheque')], max_length=20, verbose_name='Método de Pagamento')),
                ('payment_status', models.CharField(choices=[('pending', 'Pendente'), ('paid', 'Pago'), ('cancelled', 'Cancelado'), ('refunded', 'Reembolsado')], default='pending', max_length=20, verbose_name='Status do Pagamento')),
                ('due_date', models.DateField(verbose_name='Data de Vencimento')),
                ('paid_date', models.DateTimeField(blank=True, null=True, verbose_name='Data do Pagamento')),
                ('notes', models.TextField(blank=True, verbose_name='Observações')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_payments', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
            ],
            options={
                'verbose_name': 'Pagamento',
                'verbose_name_plural': 'Pagamentos',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentReceipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receipt_file', models.FileField(upload_to='payments/receipts/', verbose_name='Arquivo do Comprovante')),
                ('receipt_type', models.CharField(choices=[('pix', 'PIX'), ('bank_slip', 'Boleto'), ('credit_card', 'Cartão de Crédito'), ('receipt', 'Recibo'), ('other', 'Outro')], max_length=20, verbose_name='Tipo de Comprovante')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Enviado em')),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receipts', to='students.payment', verbose_name='Pagamento')),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_receipts', to=settings.AUTH_USER_MODEL, verbose_name='Enviado por')),
            ],
            options={
                'verbose_name': 'Comprovante de Pagamento',
                'verbose_name_plural': 'Comprovantes de Pagamento',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='Nome')),
                ('last_name', models.CharField(max_length=100, verbose_name='Sobrenome')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-mail')),
                ('phone', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Formato de telefone inválido.', regex='^\\+?1?\\d{9,15}$')], verbose_name='Telefone')),
                ('whatsapp', models.CharField(blank=True, max_length=20, verbose_name='WhatsApp')),
                ('cpf', models.CharField(max_length=14, unique=True, validators=[django.core.validators.RegexValidator(message='Formato de CPF inválido.', regex='^\\d{3}\\.\\d{3}\\.\\d{3}-\\d{2}$')], verbose_name='CPF')),
                ('rg', models.CharField(blank=True, max_length=20, verbose_name='RG')),
                ('address', models.TextField(verbose_name='Endereço')),
                ('city', models.CharField(max_length=100, verbose_name='Cidade')),
                ('state', models.CharField(max_length=2, verbose_name='Estado')),
                ('zip_code', models.CharField(max_length=10, verbose_name='CEP')),
                ('belt_color', models.CharField(choices=[('white', 'Branca'), ('blue', 'Azul'), ('purple', 'Roxa'), ('brown', 'Marrom'), ('black', 'Preta')], default='white', max_length=20, verbose_name='Faixa')),
                ('enrollment_date', models.DateField(default=django.utils.timezone.now, verbose_name='Data de Matrícula')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('birth_date', models.DateField(verbose_name='Data de Nascimento')),
                ('emergency_contact_name', models.CharField(max_length=200, verbose_name='Nome do Contato de Emergência')),
                ('emergency_contact_phone', models.CharField(max_length=20, verbose_name='Telefone do Contato de Emergência')),
                ('medical_conditions', models.TextField(blank=True, verbose_name='Condições Médicas')),
                ('allergies', models.TextField(blank=True, verbose_name='Alergias')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='students/photos/', verbose_name='Foto')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_students', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
            ],
            options={
                'verbose_name': 'Aluno',
                'verbose_name_plural': 'Alunos',
                'ordering': ['first_name', 'last_name'],
            },
        ),
        migrations.AddField(
            model_name='payment',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='students.student', verbose_name='Aluno'),
        ),
        migrations.CreateModel(
            name='StudentSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(verbose_name='Data de Início')),
                ('end_date', models.DateField(verbose_name='Data de Fim')),
                ('status', models.CharField(choices=[('active', 'Ativa'), ('expired', 'Expirada'), ('cancelled', 'Cancelada'), ('suspended', 'Suspensa')], default='active', max_length=20, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('payment_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.paymentplan', verbose_name='Plano')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='students.student', verbose_name='Aluno')),
            ],
            options={
                'verbose_name': 'Assinatura',
                'verbose_name_plural': 'Assinaturas',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='payment',
            name='subscription',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='students.studentsubscription', verbose_name='Assinatura'),
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_date', models.DateField(verbose_name='Data da Aula')),
                ('class_time', models.TimeField(verbose_name='Horário da Aula')),
                ('status', models.CharField(choices=[('present', 'Presente'), ('absent', 'Ausente'), ('late', 'Atrasado'), ('excused', 'Justificado')], default='present', max_length=20, verbose_name='Status')),
                ('notes', models.TextField(blank=True, verbose_name='Observações')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('instructor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='taught_classes', to=settings.AUTH_USER_MODEL, verbose_name='Instrutor')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='students.student', verbose_name='Aluno')),
            ],
            options={
                'verbose_name': 'Presença',
                'verbose_name_plural': 'Presenças',
                'ordering': ['-class_date', '-class_time'],
                'unique_together': {('student', 'class_date', 'class_time')},
            },
        ),
    ]
