name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  django-checks:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Django system checks
        env:
          DEBUG: 'False'
          SECRET_KEY: dummy-secret-key
          DATABASE_URL: sqlite:///db.sqlite3
          ALLOWED_HOSTS: localhost,127.0.0.1
        run: |
          python manage.py check --deploy

      - name: Check for model changes
        env:
          DEBUG: 'False'
          SECRET_KEY: dummy-secret-key
          DATABASE_URL: sqlite:///db.sqlite3
        run: |
          python manage.py makemigrations --check --dry-run

      - name: Run migrations
        env:
          DEBUG: 'False'
          SECRET_KEY: dummy-secret-key
          DATABASE_URL: sqlite:///db.sqlite3
        run: |
          python manage.py migrate --noinput

      - name: Collect static
        env:
          DEBUG: 'False'
          SECRET_KEY: dummy-secret-key
          DATABASE_URL: sqlite:///db.sqlite3
        run: |
          python manage.py collectstatic --noinput

  docker-build:
    runs-on: ubuntu-latest
    needs: django-checks

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: asbjj:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Docker image
        run: |
          docker run --rm -d --name asbjj-test \
            -e DEBUG=False \
            -e SECRET_KEY=dummy-secret-key \
            -e DATABASE_URL=sqlite:///db.sqlite3 \
            -e ALLOWED_HOSTS=localhost,127.0.0.1 \
            -p 8000:8000 \
            asbjj:test
          
          # Wait for container to start
          sleep 10
          
          # Test health endpoint
          curl -f http://localhost:8000/healthz
          
          # Test static files
          docker exec asbjj-test python manage.py collectstatic --noinput --dry-run
          
          # Cleanup
          docker stop asbjj-test

