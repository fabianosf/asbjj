# Generated by Django 5.1.4 on 2025-09-16 18:11

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('image', models.ImageField(upload_to='gallery/images/', verbose_name='Imagem')),
                ('category', models.CharField(choices=[('academy', 'Academia'), ('classes', 'Aulas'), ('events', 'Eventos'), ('graduations', 'Graduações'), ('competitions', 'Competições'), ('team', 'Equipe')], default='academy', max_length=50, verbose_name='Categoria')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Destaque')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Ordem')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
            ],
            options={
                'verbose_name': 'Imagem da Galeria',
                'verbose_name_plural': 'Galeria de Imagens',
                'ordering': ['category', 'order', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SiteSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(default='ASBJJ', max_length=200, verbose_name='Nome do Site')),
                ('site_description', models.TextField(blank=True, verbose_name='Descrição do Site')),
                ('site_logo', models.ImageField(blank=True, null=True, upload_to='site/images/', verbose_name='Logo')),
                ('site_favicon', models.ImageField(blank=True, null=True, upload_to='site/images/', verbose_name='Favicon')),
                ('contact_email', models.EmailField(max_length=254, verbose_name='E-mail de Contato')),
                ('contact_phone', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Formato de telefone inválido.', regex='^\\+?1?\\d{9,15}$')], verbose_name='Telefone de Contato')),
                ('contact_address', models.TextField(blank=True, verbose_name='Endereço')),
                ('contact_whatsapp', models.CharField(blank=True, max_length=20, verbose_name='WhatsApp')),
                ('instagram_url', models.URLField(blank=True, verbose_name='Instagram')),
                ('facebook_url', models.URLField(blank=True, verbose_name='Facebook')),
                ('youtube_url', models.URLField(blank=True, verbose_name='YouTube')),
                ('tiktok_url', models.URLField(blank=True, verbose_name='TikTok')),
                ('meta_title', models.CharField(blank=True, max_length=200, verbose_name='Meta Title')),
                ('meta_description', models.TextField(blank=True, verbose_name='Meta Description')),
                ('meta_keywords', models.TextField(blank=True, verbose_name='Meta Keywords')),
                ('google_analytics_id', models.CharField(blank=True, max_length=20, verbose_name='Google Analytics ID')),
                ('is_maintenance_mode', models.BooleanField(default=False, verbose_name='Modo Manutenção')),
                ('maintenance_message', models.TextField(blank=True, verbose_name='Mensagem de Manutenção')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
            ],
            options={
                'verbose_name': 'Configuração do Site',
                'verbose_name_plural': 'Configurações do Site',
            },
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300, verbose_name='Título')),
                ('slug', models.SlugField(unique=True, verbose_name='Slug')),
                ('excerpt', models.TextField(max_length=500, verbose_name='Resumo')),
                ('content', models.TextField(verbose_name='Conteúdo')),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='blog/images/', verbose_name='Imagem Destacada')),
                ('category', models.CharField(choices=[('news', 'Notícias'), ('tips', 'Dicas'), ('techniques', 'Técnicas'), ('events', 'Eventos'), ('nutrition', 'Nutrição'), ('health', 'Saúde')], default='news', max_length=50, verbose_name='Categoria')),
                ('meta_title', models.CharField(blank=True, max_length=300, verbose_name='Meta Title')),
                ('meta_description', models.TextField(blank=True, verbose_name='Meta Description')),
                ('status', models.CharField(choices=[('draft', 'Rascunho'), ('published', 'Publicado'), ('archived', 'Arquivado')], default='draft', max_length=20, verbose_name='Status')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Destaque')),
                ('allow_comments', models.BooleanField(default=True, verbose_name='Permitir Comentários')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('published_at', models.DateTimeField(blank=True, null=True, verbose_name='Publicado em')),
                ('view_count', models.PositiveIntegerField(default=0, verbose_name='Visualizações')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_posts', to=settings.AUTH_USER_MODEL, verbose_name='Autor')),
            ],
            options={
                'verbose_name': 'Post do Blog',
                'verbose_name_plural': 'Posts do Blog',
                'ordering': ['-published_at', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nome')),
                ('email', models.EmailField(max_length=254, verbose_name='E-mail')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Telefone')),
                ('subject', models.CharField(blank=True, max_length=300, verbose_name='Assunto')),
                ('message', models.TextField(verbose_name='Mensagem')),
                ('category', models.CharField(choices=[('general', 'Geral'), ('classes', 'Aulas'), ('schedule', 'Horários'), ('pricing', 'Preços'), ('complaint', 'Reclamação'), ('suggestion', 'Sugestão')], default='general', max_length=50, verbose_name='Categoria')),
                ('priority', models.CharField(choices=[('low', 'Baixa'), ('normal', 'Normal'), ('high', 'Alta'), ('urgent', 'Urgente')], default='normal', max_length=20, verbose_name='Prioridade')),
                ('status', models.CharField(choices=[('new', 'Nova'), ('read', 'Lida'), ('replied', 'Respondida'), ('archived', 'Arquivada')], default='new', max_length=20, verbose_name='Status')),
                ('response', models.TextField(blank=True, verbose_name='Resposta')),
                ('responded_at', models.DateTimeField(blank=True, null=True, verbose_name='Respondido em')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='Endereço IP')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('responded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contact_responses', to=settings.AUTH_USER_MODEL, verbose_name='Respondido por')),
            ],
            options={
                'verbose_name': 'Mensagem de Contato',
                'verbose_name_plural': 'Mensagens de Contato',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, verbose_name='Biografia')),
                ('experience_years', models.PositiveIntegerField(default=0, verbose_name='Anos de Experiência')),
                ('certifications', models.JSONField(blank=True, default=list, verbose_name='Certificações')),
                ('specializations', models.JSONField(blank=True, default=list, verbose_name='Especializações')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='instructors/photos/', verbose_name='Foto')),
                ('social_links', models.JSONField(blank=True, default=dict, verbose_name='Links Sociais')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Destaque')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='instructor_profile', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Instrutor',
                'verbose_name_plural': 'Instrutores',
                'ordering': ['user__first_name', 'user__last_name'],
            },
        ),
    ]
