# Generated by Django 5.1.4 on 2025-09-30 22:05

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0005_coupon_wishlist_wishlistitem'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sender_type', models.CharField(choices=[('customer', 'Cliente'), ('admin', 'Administrador'), ('system', 'Sistema')], max_length=20, verbose_name='Tipo do Remetente')),
                ('sender_name', models.CharField(max_length=200, verbose_name='Nome do Remetente')),
                ('sender_email', models.EmailField(blank=True, max_length=254, verbose_name='E-mail do Remetente')),
                ('message', models.TextField(verbose_name='Mensagem')),
                ('is_read', models.BooleanField(default=False, verbose_name='Lida')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
            ],
            options={
                'verbose_name': 'Mensagem do Chat',
                'verbose_name_plural': 'Mensagens do Chat',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ChatTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('subject', models.CharField(max_length=200, verbose_name='Assunto')),
                ('content', models.TextField(verbose_name='Conteúdo')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
            ],
            options={
                'verbose_name': 'Template de Chat',
                'verbose_name_plural': 'Templates de Chat',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CustomerLoyalty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-mail')),
                ('total_points', models.PositiveIntegerField(default=0, verbose_name='Total de Pontos')),
                ('used_points', models.PositiveIntegerField(default=0, verbose_name='Pontos Usados')),
                ('level', models.CharField(choices=[('bronze', 'Bronze'), ('silver', 'Prata'), ('gold', 'Ouro'), ('platinum', 'Platina')], default='bronze', max_length=20, verbose_name='Nível')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
            ],
            options={
                'verbose_name': 'Fidelidade do Cliente',
                'verbose_name_plural': 'Fidelidades dos Clientes',
                'ordering': ['-total_points'],
            },
        ),
        migrations.CreateModel(
            name='LoyaltyProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('points_per_real', models.DecimalField(decimal_places=2, default=1.0, max_digits=5, verbose_name='Pontos por Real')),
                ('points_for_signup', models.PositiveIntegerField(default=100, verbose_name='Pontos por Cadastro')),
                ('points_for_review', models.PositiveIntegerField(default=50, verbose_name='Pontos por Avaliação')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
            ],
            options={
                'verbose_name': 'Programa de Fidelidade',
                'verbose_name_plural': 'Programas de Fidelidade',
            },
        ),
        migrations.CreateModel(
            name='LoyaltyReward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('description', models.TextField(verbose_name='Descrição')),
                ('points_cost', models.PositiveIntegerField(verbose_name='Custo em Pontos')),
                ('discount_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Desconto (%)')),
                ('discount_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Desconto (R$)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
            ],
            options={
                'verbose_name': 'Recompensa',
                'verbose_name_plural': 'Recompensas',
                'ordering': ['points_cost'],
            },
        ),
        migrations.CreateModel(
            name='ChatAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='chat/attachments/', verbose_name='Arquivo')),
                ('filename', models.CharField(max_length=255, verbose_name='Nome do Arquivo')),
                ('file_size', models.PositiveIntegerField(verbose_name='Tamanho do Arquivo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='core.chatmessage', verbose_name='Mensagem')),
            ],
            options={
                'verbose_name': 'Anexo do Chat',
                'verbose_name_plural': 'Anexos do Chat',
            },
        ),
        migrations.CreateModel(
            name='ChatRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_email', models.EmailField(max_length=254, verbose_name='E-mail do Cliente')),
                ('customer_name', models.CharField(max_length=200, verbose_name='Nome do Cliente')),
                ('subject', models.CharField(max_length=200, verbose_name='Assunto')),
                ('status', models.CharField(choices=[('open', 'Aberta'), ('closed', 'Fechada'), ('waiting', 'Aguardando')], default='open', max_length=20, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('closed_at', models.DateTimeField(blank=True, null=True, verbose_name='Fechado em')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Atribuído a')),
            ],
            options={
                'verbose_name': 'Sala de Chat',
                'verbose_name_plural': 'Salas de Chat',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.AddField(
            model_name='chatmessage',
            name='room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='core.chatroom', verbose_name='Sala'),
        ),
        migrations.CreateModel(
            name='LoyaltyHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField(verbose_name='Pontos')),
                ('reason', models.CharField(blank=True, max_length=200, verbose_name='Motivo')),
                ('type', models.CharField(choices=[('earned', 'Ganho'), ('used', 'Usado'), ('expired', 'Expirado')], max_length=10, verbose_name='Tipo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='core.customerloyalty', verbose_name='Cliente')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.order', verbose_name='Pedido')),
            ],
            options={
                'verbose_name': 'Histórico de Fidelidade',
                'verbose_name_plural': 'Históricos de Fidelidade',
                'ordering': ['-created_at'],
            },
        ),
    ]
